from aiogram.types import InlineQuery, \
    InputTextMessageContent, InlineQueryResultArticle, \
    InlineKeyboardMarkup, InlineKeyboardButton
from model import *
from model import storage
from model import item
from model.storage import StorageUser, StorageUser
import json, time

class Flow():
    i: int
    run = False
    items = []

    def __init__(self, user: StorageUser, run=False, data="") -> None:
        self.user = user.prop
        self.user_id = self.user.get('tgid')
        # self.run = run
        # self.data = My_command().decompile(data)

        self.commands ={
            "–ø–æ–º–æ—â—å": 0,
            "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è": 1,
            "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è - –¥–æ–±–∞–≤–∏—Ç—å": 100,
            "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è - —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö": 101,
            "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö": 102,

            "–∫–∞—Ä—Ç–æ—á–∫–∏": 2,
            "–∫–∞—Ä—Ç–æ—á–∫–∏ - –¥–æ–±–∞–≤–∏—Ç—å": 200,
            "–∫–∞—Ä—Ç–æ—á–∫–∏ - –ø–æ—Å–º–æ—Ç—Ä–∏—Ç—å –º–æ–∏": 201,
            "–∫–∞—Ä—Ç–æ—á–∫–∏ - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ": 202,

            "–∑–∞–ø—Ä–æ—Å—ã":3,
            "–∑–∞–ø—Ä–æ—Å—ã - –¥–æ–±–∞–≤–∏—Ç—å":300,
            "–∑–∞–ø—Ä–æ—Å—ã - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ":302,
            "–∑–∞–ø—Ä–æ—Å—ã - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ":303,

            "—Å–∫–ª–∞–¥":4,
            "—Å–∫–ª–∞–¥ - –¥–æ–±–∞–≤–∏—Ç—å —Å–∫–ª–∞–¥":400,
            "—Å–∫–ª–∞–¥ - —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤":402,
            "—Å–∫–ª–∞–¥ - –∑–∞–∫—Ä—ã—Ç—å —Å–∫–ª–∞–¥":405,

            "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å":5,
            "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö":502,
            "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∑–∞–±–∞–Ω–∏—Ç—å":505,
            "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–¥–µ–ª–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º":508,
            "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º":509,
            "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–≤–æ–µ—Ç–æ—á–∏—è":510,
            "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":511,

            "–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ":6,
            "–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –¥–æ–±–∞–≤–∏—Ç—å":600,
            "–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö":602,
            "–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–≤–æ–µ—Ç–æ—á–∏—è":610,
            "–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–≤–æ–µ—Ç–æ—á–∏—è2":611,
            # "–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - —É–¥–∞–ª–∏—Ç—å —Å –∑–∞–º–µ–Ω–æ–π":603,
            "–∫–∞—Ç–µ–≥–æ—Ä–∏—è":7,            
            "–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å":700,
            "–∫–∞—Ç–µ–≥–æ—Ä–∏—è - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö": 702,
            # "–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å": 702
            "–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–≤–æ–µ—Ç–æ—á–∏—è":710,
            "–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–≤–æ–µ—Ç–æ—á–∏—è2":711,
        }

    def articles(self,mes: str):
        self.items.clear()
        self.ap(InlineQueryResultArticle(
            id=self.commands.get("–ø–æ–º–æ—â—å"),
            title=f'üî¥ –≠—Ç–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ–º–∞–Ω–¥. –ù–∞–∂–º–∏ –Ω–∞ —ç—Ç–æ—Ç –ø—É–Ω–∫—Ç –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏',
            input_message_content=InputTextMessageContent("/help"),
            ))
        if self.user.get("banned")==1:
            self.ap(InlineQueryResultArticle(
                id=0,
                title=f'üíî —Ç—ã –∑–∞–±–∞–Ω–µ–Ω',
                input_message_content=InputTextMessageContent('')))
            return
        if mes=="":
            self.build_start()

        if mes.lower().find('–ø') == 0:
            self.build_resources()
            
        if mes.lower().find('—é') == 0:
            self.build_users(mes)

        if mes.lower().find('–Ω') == 0:
            self.build_items(mes)
        return self.items
               

    def build_start(self):
        arts = [
            #–¥–æ—Å—Ç—É–ø                  –∫–æ–¥ –∫–æ–º–∞–Ω–¥—ã      —Ç–µ–∫—Å—Ç                                                              —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
            [0,    self.commands.get("–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è"),"üî¥ –ø - –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π",             self.com_error_mes("–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è")],
            [1,    self.commands.get("–∫–∞—Ä—Ç–æ—á–∫–∏"),     "üî¥ –Ω - –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω—É–∂–¥–∞—é—â–∏—Ö—Å—è",      self.com_error_mes("–∫–∞—Ä—Ç–æ—á–∫–∏ –Ω—É–∂–¥–∞—é—â–∏—Ö—Å—è")],
            [1,    self.commands.get("–∑–∞–ø—Ä–æ—Å—ã"),      "üî¥ –∑ - –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤",                  self.com_error_mes("–∑–∞–ø—Ä–æ—Å—ã")],
            [1,    self.commands.get("—Å–∫–ª–∞–¥"),        "üî¥ —Ö - –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–∫–ª–∞–¥–∞",                    self.com_error_mes("—Å–∫–ª–∞–¥")],
            [1,    self.commands.get("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"), "üî¥ –Ω - –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–π",  self.com_error_mes("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ")],
            [2,    self.commands.get("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"), "üî¥ —é - –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ ",self.com_error_mes("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")]
        ]

        for art in arts:
            if art[0]==0: self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),))

        if self.user.get('moderator')==1:
            for art in arts:
                if art[0]==1: self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),))

        if self.user.get('admin')==1:
            for art in arts:
                if art[0]==2: self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),))            
        return

    def build_resources(self):
        self.ap(InlineQueryResultArticle(
            id=self.commands.get("–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è - –¥–æ–±–∞–≤–∏—Ç—å"),
            title=f'üî¥ –Ω - –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ',
            input_message_content=InputTextMessageContent( \
                self.com_error_mes('–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è')),))
        self.ap(InlineQueryResultArticle(
            id=self.commands.get("–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è - —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö"),
            title=f'üìÉ —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π',
            input_message_content=InputTextMessageContent( \
                self.com_error_mes('–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è')),))
        if self.user.get('moderator')==1 or self.user.get('admin')==1:
            self.ap(InlineQueryResultArticle(
                id=self.commands.get("–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö"),
                title=f'üì∞ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è',
                input_message_content=InputTextMessageContent("–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è"),
                reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å',callback_data='test'))))
        return

    def build_users(self, mes:str):
        # "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö":502,
        # "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∑–∞–±–∞–Ω–∏—Ç—å":505,
        # "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–¥–µ–ª–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º":508,
        # "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º":509,
        # "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–≤–æ–µ—Ç–æ—á–∏—è":510,
        # "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":511,
        button_calback_data_get_all_users = My_command(
                        self.user_id,
                        '—é',
                        'all',
                        self.user.get('id')
                    ).compile()
        arts = [
#–¥–æ—Å—Ç—É–ø                  –∫–æ–¥ –∫–æ–º–∞–Ω–¥—ã                                —Ç–µ–∫—Å—Ç                                                          —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞                              —ç—Ç–∞–ø      —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏     –¥–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
[2,    self.commands.get("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö"),             "üì∞ –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",                           "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",        "—é",      "–ü–æ–∫–∞–∑–∞—Ç—å",      button_calback_data_get_all_users],
[2,    self.commands.get("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∑–∞–±–∞–Ω–∏—Ç—å"),                "üî¥ –± - –∑–∞–±–∞–Ω–∏—Ç—å/—Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",  self.com_error_mes("–±–∞–Ω/—Ä–∞–∑–±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),               "—é",      None,            None],
[2,    self.commands.get("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–¥–µ–ª–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º"),     "üî¥ –º - –¥–∞—Ç—å/–∑–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞",    self.com_error_mes("–¥–∞—Ç—å/–∑–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"),         "—é",      None,            None],
[2,    self.commands.get("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º"),         "üî¥ –∞ - –¥–∞—Ç—å/–∑–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞",        self.com_error_mes("–¥–∞—Ç—å/–∑–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞"),             "—é",      None,            None],
        ]
        if self.user.get('admin')==1:
            if mes=='—é':
                for art in arts:
                    if art[0]==2 and art[4]=="—é":
                        if art[5] != None:
                            self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton(text=art[5],callback_data=art[6]))))
                        else:
                            self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),))

            if mes.find('—é–±')==0 or mes.find('—é–º')==0 or mes.find('—é–∞')==0:
                if len(mes)==2:
                    self.ap(InlineQueryResultArticle(
                        id=self.commands.get("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–≤–æ–µ—Ç–æ—á–∏—è"),
                        title=f'üî¥ –Ω–∞–ø–∏—à–∏ ":" (–¥–≤–æ–µ—Ç–æ—á–∏–µ) —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                        input_message_content=InputTextMessageContent(\
                            self.com_error_mes('—É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')),))
                    return
                if mes[2]==":":
                    self.ap(InlineQueryResultArticle(
                        id=self.commands.get("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                        title=f'üî¥ –£–∫–∞–∂–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏ –Ω–∞–∂–º–∏ –Ω–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
                        input_message_content=InputTextMessageContent(\
                            self.com_error_mes('—É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')),))
                    if len(mes.split(":"))==2:
                        if len(mes.split(":")[1])>0:
                            if mes.split(":")[1].isnumeric():
                                user_list = storage.get_users(id=mes.split(":")[1])
                            else:
                                user_list = storage.get_users(name=mes.split(":")[1])
                        else:
                            user_list = storage.get_users()
                        # if len(user_list)==0: return
                        mode={
                            '–∞': '–ó–∞–ø–∏—Å–∞—Ç—å/–≤—ã–ø–∏—Å–∞—Ç—å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã',
                            '–º': '–ó–∞–ø–∏—Å–∞—Ç—å/–≤—ã–ø–∏—Å–∞—Ç—å –≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã',
                            '–±': '–ó–∞–±–∞–Ω–∏—Ç—å/—Ä–∞–∑–±–∞–Ω–∏—Ç—å',
                        }

                        i=-1
                        x=len(user_list)-1
                        obj_user: StorageUser
                        if x>45:
                            x=45
                        while i<x:
                            i+=1
                            obj_user = user_list[i]
                            user_id = obj_user.prop.get('id')
                            user_name = obj_user.prop.get('name')
                            button_calback_data = My_command(
                                    self.user_id,
                                    mes[:2],
                                    "",
                                    user_id
                                ).compile()
                            self.ap(InlineQueryResultArticle(
                            id=1000000000000000+user_id,
                            title=f"üë§ {user_name} id={obj_user.prop.get('tgid')}",
                            input_message_content=InputTextMessageContent(obj_user.description_update()),
                            reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton(
                                text=mode.get(mes[1]),
                                callback_data=button_calback_data
                                ))))
                    
    def build_items(self,mes:str):
        # "–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ":6,
        # "–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –¥–æ–±–∞–≤–∏—Ç—å":600,
        # "–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö":602,
        # "–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å":700,
        # "–∫–∞—Ç–µ–≥–æ—Ä–∏—è - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö": 702
        # "–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - —É–¥–∞–ª–∏—Ç—å —Å –∑–∞–º–µ–Ω–æ–π":603,

        is_admin = self.user.get('admin')
        # is_moder = self.user.get('moderator')

        button_calback_data_get_all_items = My_command(self.user_id, '–Ω–Ω', 'all', self.user.get('id')).compile()
        button_calback_data_new_items =     My_command(self.user_id, '–Ω–Ω', 'new', 0).compile()
        button_calback_data_get_all_cats =  My_command(self.user_id, '–Ω–∫', 'all', self.user.get('id')).compile()
        button_calback_data_new_category =  My_command(self.user_id, '–Ω–∫', 'new', 0).compile()
        arts = [
#–¥–æ—Å—Ç—É–ø                  –∫–æ–¥ –∫–æ–º–∞–Ω–¥—ã                                —Ç–µ–∫—Å—Ç                                                          —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞                              —ç—Ç–∞–ø      —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏     –¥–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
[2,    self.commands.get("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö"),             "üì∞ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–π",                        "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è",              "–Ω",      "–ü–æ–∫–∞–∑–∞—Ç—å",      button_calback_data_get_all_items],
[2,    self.commands.get("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –¥–æ–±–∞–≤–∏—Ç—å"),                "üî¥ –Ω - –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ",             self.com_error_mes("–¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"),                 "–Ω",      None,            None],
[2,    self.commands.get("–∫–∞—Ç–µ–≥–æ—Ä–∏—è"),                              "üî¥ –∫ - –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π",             self.com_error_mes("–∫–∞—Ç–µ–≥–æ—Ä–∏—è"),                             "–Ω",      None,            None],
[2,    self.commands.get("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–≤–æ–µ—Ç–æ—á–∏—è"),  "üî¥ \":\" —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", 
                                                                                                                self.com_error_mes("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –¥–æ–±–∞–≤–∏—Ç—å"),                "–Ω–Ω",    None,            None],
[2,    self.commands.get("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–≤–æ–µ—Ç–æ—á–∏—è2"), "üî¥ \":\" —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", 
                                                                                                                self.com_error_mes("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –¥–æ–±–∞–≤–∏—Ç—å"),                "–Ω–Ω2",   None,            None],
[2,    self.commands.get("–∫–∞—Ç–µ–≥–æ—Ä–∏—è - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö"),                "üì∞ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π",                           "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",                 "–Ω–∫",     "–ü–æ–∫–∞–∑–∞—Ç—å",      button_calback_data_get_all_cats],
[2,    self.commands.get("–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å"),                   "üî¥ –Ω - –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é",                self.com_error_mes("–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å"),                  "–Ω–∫",     None,            None],
[2,    self.commands.get("–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–≤–æ–µ—Ç–æ—á–∏—è"),     "üî¥ \":\" —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", 
                                                                                                                self.com_error_mes("–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å"),                  "–Ω–∫–Ω",     None,            None],
[2,    self.commands.get("–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–≤–æ–µ—Ç–æ—á–∏—è2"),    "üî¥ \":\" —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", 
                                                                                                                self.com_error_mes("–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å"),               "–Ω–∫–Ω2",    None,            None],
        ]
        if is_admin==True:
            
            if mes=="–Ω":
                for art in arts:
                    if art[0]==2 and art[4]=="–Ω":
                        if art[5] != None:
                            self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton(text=art[5],callback_data=art[6]))))
                        else:
                            self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),))
            if mes.find('–Ω–Ω')==0:  # –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
                if mes == '–Ω–Ω':
                    for art in arts:
                        if art[0]==2 and art[4]=="–Ω–Ω":
                            self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),))

                if len(mes)>2 and mes[2]==":":
                    if len(mes.split(":"))==2:
                        answer = mes.split(':')[1]
                        print(answer)
                        if answer=='': 
                            answer='–ù–∞—á–Ω–∏ –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è'
                            self.ap(InlineQueryResultArticle(
                            id=str(self.commands.get("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –¥–æ–±–∞–≤–∏—Ç—å"))+str(round(time.time()*100)),
                            title=f"üî¥ {answer}",
                            input_message_content=InputTextMessageContent( \
                                self.com_error_mes('–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –¥–æ–±–∞–≤–∏—Ç—å')),))
                        else:
                            for art in arts:
                                if art[0]==2 and art[4]=="–Ω–Ω2":
                                    self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),))
                            self.ap(InlineQueryResultArticle(
                            id=str(self.commands.get("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –¥–æ–±–∞–≤–∏—Ç—å"))+str(round(time.time()*100)),
                            title=f"üî¥ –¥–æ–±–∞–≤–∏—Ç—å {answer}",
                            input_message_content=InputTextMessageContent(answer),
                            reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton(
                                text='–î–æ–±–∞–≤–∏—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ',
                                callback_data=button_calback_data_new_category
                                ))))

                    if len(mes.split(":"))==3:
                        for art in arts:
                            if art[0]==2 and art[4]=="–Ω–Ω2":
                                self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),))
                        self.ap(InlineQueryResultArticle(
                        id=str(self.commands.get("–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –¥–æ–±–∞–≤–∏—Ç—å"))+str(round(time.time()*100)),
                        title=f"üî¥ —É–∫–∞–∂–∏ id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è \'{answer}\'",
                        input_message_content=InputTextMessageContent( \
                            self.com_error_mes('–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –¥–æ–±–∞–≤–∏—Ç—å')),))

                        par_cat = item.get_categories(name = mes.split(":")[2])
                        i = 0
                        x=len(par_cat)-1
                        obj_cat: item.Category
                        if x>45:
                            x=45
                        while i<x:
                            i+=1
                            obj_cat = par_cat[i]
                            self.ap(InlineQueryResultArticle(
                            id=str(self.commands.get("–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å"))+str((time.time()%1))[2:],
                            title=f"‚ûï –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ {answer} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {obj_cat.prop.get('name')}",
                            input_message_content=InputTextMessageContent(answer),
                            reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton(
                                text='–î–æ–±–∞–≤–∏—Ç—å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ',
                                callback_data=button_calback_data_new_items
                                ))))

            if mes=='–Ω–∫':   #–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ - –∫–∞—Ç–µ–≥–æ—Ä–∏—è
                for art in arts:
                    if art[0]==2 and art[4]=="–Ω–∫":
                        if art[5] != None:
                            self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton(text=art[5],callback_data=art[6]))))
                        else:
                            self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),))

            if mes.find('–Ω–∫–Ω')==0:  # –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                if mes == '–Ω–∫–Ω':
                    for art in arts:
                        if art[0]==2 and art[4]=="–Ω–∫–Ω":
                            self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),))

                if len(mes)>3 and mes[3]==":":
                    if len(mes.split(":"))==2:
                        answer = mes.split(':')[1]
                        print(answer)
                        if answer=='': 
                            answer='–ù–∞—á–Ω–∏ –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
                            self.ap(InlineQueryResultArticle(
                            id=str(self.commands.get("–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å"))+str(round(time.time()*100)),
                            title=f"üî¥ {answer}",
                            input_message_content=InputTextMessageContent( \
                                self.com_error_mes('–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å')),))
                        else:
                            for art in arts:
                                if art[0]==2 and art[4]=="–Ω–∫–Ω2":
                                    self.ap(InlineQueryResultArticle(id=art[1], title=art[2],input_message_content=InputTextMessageContent(art[3]),))
                            self.ap(InlineQueryResultArticle(
                            id=str(self.commands.get("–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å"))+str(round(time.time()*100)),
                            title=f"‚ûï –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é {answer}",
                            input_message_content=InputTextMessageContent(answer),
                            reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton(
                                text='–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                                callback_data=button_calback_data_new_category
                                ))))
                    if len(mes.split(":"))==3:
                        answer = mes.split(':')[1]
                        print(answer)
                        if answer=='': 
                            answer='–ù–∞—á–Ω–∏ –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
                            self.ap(InlineQueryResultArticle(
                            id=str(self.commands.get("–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å"))+str(round(time.time()*100)),
                            title=f"üî¥ {answer}",
                            input_message_content=InputTextMessageContent( \
                                self.com_error_mes('–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å')),))
                        else:
                            par_cat = item.get_categories(name = mes.split(":")[2])
                            i = 0
                            x=len(par_cat)-1
                            obj_cat: item.Category
                            if x>45:
                                x=45
                            while i<x:
                                i+=1
                                obj_cat = par_cat[i]
                                button_calback_data_new_sub_category = My_command(
                                    self.user_id,
                                    "–Ω–∫",
                                    "new_sub",
                                    obj_cat.id
                                ).compile()
                                self.ap(InlineQueryResultArticle(
                                id=str(self.commands.get("–∫–∞—Ç–µ–≥–æ—Ä–∏—è - –¥–æ–±–∞–≤–∏—Ç—å"))+str((time.time()%1))[2:],
                                title=f"‚ûï –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é {answer} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {obj_cat.prop.get('name')}",
                                input_message_content=InputTextMessageContent(answer),
                                reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton(
                                    text='–î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                                    callback_data=button_calback_data_new_sub_category
                                    ))))

    def build_add_resource(self, mes):
        pass

    def ap(self, item:InlineQueryResultArticle):
        if self.run== False:
            print(item)
            self.items.append(item)

    def com_error_mes(self, command):
        return f'@{self.user.get("name")} —Ö–æ—Ç–µ–ª(–∞) –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É `{command}`,' + \
                                ' –Ω–æ –Ω–µ –≤–≤–µ–ª(–∞) –∫–æ–º–∞–Ω–¥—É –ø–æ–ª–Ω–æ—Å—Ç—å—é \n' + \
                                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è —Å–ø—Ä–∞–≤–∫–æ–π /help'

class My_command():
    auth = ""
    section = ""
    context = ""
    destination = ""
    def __init__(self, auth="", section="", context="", destination="") -> None:
        self.auth = auth
        self.section = section
        self.context = context
        self.destination = destination
        
    def compile(self):
        data = {
            'a':self.auth,
            's':self.section,
            'c':self.context,
            'd':self.destination
        }
        return json.dumps(data)
    
    def decompile(self, data):
        array_data = {}
        array_data = json.loads(data)
        try:
            if array_data.get('a') is None or \
            array_data.get('s') is None or \
            array_data.get('c') is None or \
            array_data.get('d') is None:
                raise Exception()
            self.auth = int(array_data.get('a'))
            self.section = array_data.get('s')
            self.context = array_data.get('c')
            self.destination = int(array_data.get('d'))
        except:
            print(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∞—Ç—Ä–∏–±—É—Ç –∫–æ–º–∞–Ω–¥—ã –≤ —Å—Ç—Ä–æ–∫–µ {data}\n–¢—Ä–µ–±—É—é—Ç—Å—è: \n\
    - 'a' - auth\n\
    - 's' - section\n\
    - 'c' - context\n\
    - 'd' - destination\n")
